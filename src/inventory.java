
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ASUS
 */
public class inventory extends javax.swing.JFrame {
 String option;
 String uname;
    /**
     * Creates new form inventory
     */
    public inventory() {
        initComponents();
        Show();
    }
     public inventory(String uname,String option) {
        initComponents();
        this.option=option;
        this.uname=uname;
        Show();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        show = new javax.swing.JButton();
        insert = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Ingredient_No = new javax.swing.JTextField();
        Ingredient_Name = new javax.swing.JTextField();
        Available_Quantity = new javax.swing.JTextField();
        Minimum_Stock = new javax.swing.JTextField();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        back = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1850, 1050));
        setSize(new java.awt.Dimension(1850, 1050));

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setForeground(new java.awt.Color(0, 51, 51));
        jPanel1.setPreferredSize(new java.awt.Dimension(1850, 1050));

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 85)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(172, 6, 24));
        jLabel2.setText("  Inventory");

        jTable1.setBackground(new java.awt.Color(0, 102, 102));
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ingredient_No", "Ingredient_Name", "Available_Quantity", "Minimum_Stock"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(255, 51, 0));
        jTable1.setSelectionForeground(new java.awt.Color(102, 0, 204));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(2).setResizable(false);
        }

        show.setBackground(new java.awt.Color(102, 102, 0));
        show.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        show.setForeground(new java.awt.Color(51, 0, 51));
        show.setText("SHOW");
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });

        insert.setBackground(new java.awt.Color(102, 102, 0));
        insert.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        insert.setForeground(new java.awt.Color(51, 0, 51));
        insert.setText("INSERT");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        jLabel3.setText("Ingredient_No");

        jLabel4.setText("Ingredient_Name");

        jLabel5.setText("Available_Quantity");

        jLabel6.setText("Minimum_Stock");

        Ingredient_No.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ingredient_NoActionPerformed(evt);
            }
        });

        update.setBackground(new java.awt.Color(102, 102, 0));
        update.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        update.setForeground(new java.awt.Color(51, 0, 51));
        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(102, 102, 0));
        delete.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        delete.setForeground(new java.awt.Color(51, 0, 51));
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jLabel7.setText("Search");

        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });

        back.setBackground(new java.awt.Color(102, 102, 0));
        back.setFont(new java.awt.Font("Tahoma", 2, 36)); // NOI18N
        back.setForeground(new java.awt.Color(51, 0, 51));
        back.setText("HOME");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59)
                                .addComponent(show, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(delete)
                                .addGap(445, 445, 445))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel6))
                                        .addGap(45, 45, 45)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Minimum_Stock)
                                            .addComponent(Ingredient_Name)
                                            .addComponent(Available_Quantity)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(67, 67, 67)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Ingredient_No, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(249, 249, 249)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(132, 132, 132))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(404, 404, 404)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 413, Short.MAX_VALUE)
                        .addComponent(back)
                        .addGap(265, 265, 265))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel7)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(back))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(Ingredient_No, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(Ingredient_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(Available_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(Minimum_Stock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(show, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete))
                .addContainerGap(398, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 403, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 346, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed
        // TODO add your handling code here:
         try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection conn=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","manager","manager");
            Statement st=conn.createStatement();
            ResultSet rs=st.executeQuery("select*from Ingredients");
            while(jTable1.getRowCount()>0)
            {
                ((DefaultTableModel)jTable1.getModel()).removeRow(0);
                
            }
            int col=rs.getMetaData().getColumnCount();
            while(rs.next())
            {
                Object [] rows=new Object[col];
                for(int i=1;i<=col;i++)
                {
                    rows[i-1]=rs.getObject(i);
                }
                ((DefaultTableModel)jTable1.getModel()).insertRow(rs.getRow()-1,rows);
            }
            rs.close();
            st.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_showActionPerformed

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        // TODO add your handling code here:
         try{
             Class.forName("oracle.jdbc.driver.OracleDriver");
             Connection conn=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","manager","manager");
        
        PreparedStatement ps=conn.prepareStatement("insert into ingredients(Ingredient_No,Ingredient_Name,Available_Quantity,Minimum_Stock) values(?,?,?,?)");
        
        
       String s1=Ingredient_No.getText();
       String s2=Ingredient_Name.getText();
       String s3=Available_Quantity.getText();
       String s4=Minimum_Stock.getText();
        ps.setString(1,s1);
        ps.setString(2,s2);
        ps.setString(3,s3);
        ps.setString(4,s4);
        ps.executeUpdate();
         Statement st=conn.createStatement();
            ResultSet rs=st.executeQuery("select Ingredient_No,Ingredient_Name,Available_Quantity,Minimum_Stock from Ingredients");
            while(jTable1.getRowCount()>0)
            {
                ((DefaultTableModel)jTable1.getModel()).removeRow(0);
                
            }
            int col=rs.getMetaData().getColumnCount();
            while(rs.next())
            {
                Object [] rows=new Object[col];
                for(int i=1;i<=col;i++)
                {
                    rows[i-1]=rs.getObject(i);
                }
                ((DefaultTableModel)jTable1.getModel()).insertRow(rs.getRow()-1,rows);
            }
        conn.close();
        ps.close();
        }
        
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_insertActionPerformed

    private void Ingredient_NoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ingredient_NoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Ingredient_NoActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int i=jTable1.getSelectedRow();
        TableModel model=jTable1.getModel();
        Ingredient_No.setText(model.getValueAt(i,0).toString());
        Ingredient_Name.setText(model.getValueAt(i,1).toString());
        Available_Quantity.setText(model.getValueAt(i,2).toString());
        Minimum_Stock.setText(model.getValueAt(i,3).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
          try{
             Class.forName("oracle.jdbc.driver.OracleDriver");
             Connection conn=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","manager","manager");
             int row=jTable1.getSelectedRow();
             String value=(jTable1.getModel().getValueAt(row,0).toString());
             PreparedStatement ps=conn.prepareStatement("update Ingredients set Ingredient_No=?,Ingredient_Name=?,Available_Quantity=?,Minimum_Stock=? where Ingredient_No="+value);
             String s1=Ingredient_No.getText();
       String s2=Ingredient_Name.getText();
       String s3=Available_Quantity.getText();
       String s4=Minimum_Stock.getText();
        ps.setString(1,s1);
        ps.setString(2,s2);
        ps.setString(3,s3);
        ps.setString(4,s4);
        ps.executeUpdate();
        Statement st=conn.createStatement();
            ResultSet rs=st.executeQuery("select Ingredient_No,Ingredient_Name,Available_Quantity,Minimum_Stock from Ingredients");
            while(jTable1.getRowCount()>0)
            {
                ((DefaultTableModel)jTable1.getModel()).removeRow(0);
                
            }
            int col=rs.getMetaData().getColumnCount();
            while(rs.next())
            {
                Object [] rows=new Object[col];
                for(int i=1;i<=col;i++)
                {
                    rows[i-1]=rs.getObject(i);
                }
                ((DefaultTableModel)jTable1.getModel()).insertRow(rs.getRow()-1,rows);
            }
        conn.close();
        ps.close();
          }
            catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
         try{
             Class.forName("oracle.jdbc.driver.OracleDriver");
             Connection conn=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","manager","manager");
             int row=jTable1.getSelectedRow();
             String value=(jTable1.getModel().getValueAt(row,0).toString());
             PreparedStatement ps=conn.prepareStatement("Delete from ingredients where Ingredient_No="+value);
             ps.executeUpdate();
              Statement st=conn.createStatement();
            ResultSet rs=st.executeQuery("select Ingredient_No,Ingredient_Name,Available_Quantity,Minimum_Stock from Ingredients");
            while(jTable1.getRowCount()>0)
            {
                ((DefaultTableModel)jTable1.getModel()).removeRow(0);
                
            }
            int col=rs.getMetaData().getColumnCount();
            while(rs.next())
            {
                Object [] rows=new Object[col];
                for(int i=1;i<=col;i++)
                {
                    rows[i-1]=rs.getObject(i);
                }
                ((DefaultTableModel)jTable1.getModel()).insertRow(rs.getRow()-1,rows);
            }
        conn.close();
        ps.close();
             
         }
          catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        // TODO add your handling code here:
          try{
             Class.forName("oracle.jdbc.driver.OracleDriver");
             Connection conn=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","manager","manager");
         PreparedStatement ps=conn.prepareStatement("select * from ingredients where ingredient_No=?");
         ps.setString(1, search.getText());
         ResultSet rs=ps.executeQuery();
         if(rs.next())
         {
             String setid=rs.getString("Ingredient_No");
             Ingredient_No.setText(setid);
             String setname=rs.getString("Ingredient_Name");
            
             Ingredient_Name.setText(setname);
             String setquantity=rs.getString("Available_Quantity");
             Available_Quantity.setText(setquantity);
             String setstock=rs.getString("Minimum_Stock");
             Minimum_Stock.setText(setstock);
         }
          }
          
          catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_searchKeyReleased

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        if(option=="Manager")
        {
          Manager_homepage mh=new Manager_homepage(uname,option);
        mh.setVisible(true);
        inventory cp=new inventory(uname,option);
        cp.setVisible(false);
        dispose();
        }
        else if(option=="Chef")
        {
             Chef_homepage mh=new Chef_homepage(uname,option);
        mh.setVisible(true);
        inventory cp=new inventory(uname,option);
        cp.setVisible(false);
        dispose();
        }
    }//GEN-LAST:event_backActionPerformed
    public void Show()
    {
         try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection conn=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","manager","manager");
            Statement st=conn.createStatement();
            ResultSet rs=st.executeQuery("select*from Ingredients");
            while(jTable1.getRowCount()>0)
            {
                ((DefaultTableModel)jTable1.getModel()).removeRow(0);
                
            }
            int col=rs.getMetaData().getColumnCount();
            while(rs.next())
            {
                Object [] rows=new Object[col];
                for(int i=1;i<=col;i++)
                {
                    rows[i-1]=rs.getObject(i);
                }
                ((DefaultTableModel)jTable1.getModel()).insertRow(rs.getRow()-1,rows);
            }
            rs.close();
            st.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }                                    

    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Available_Quantity;
    private javax.swing.JTextField Ingredient_Name;
    private javax.swing.JTextField Ingredient_No;
    private javax.swing.JTextField Minimum_Stock;
    private javax.swing.JButton back;
    private javax.swing.JButton delete;
    private javax.swing.JButton insert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField search;
    private javax.swing.JButton show;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
